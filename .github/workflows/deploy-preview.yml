name: "Deploy Preview"

on:
  workflow_dispatch: {}
  push:
    branches-ignore:
      - main
  pull_request_target:
    # enable runs for this workflow when labeled as safe only
    # prevent execution when the workflow itself is modified from a fork
    types:
      - labeled
      - synchronize

concurrency:
  group: ${{ github.workflow }}-${{ github.head_ref || github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

env:
  PYTHON_VERSION: "3.13"

jobs:
  deploy-preview:
    name: Build & Deploy
    runs-on: ubuntu-latest
    # foo
    #if: |
    #  (github.event_name == 'pull_request_target' && contains(github.event.labels.*.name, 'safe'))
    #  || (github.event_name == 'push' && github.event.repository.full_name == github.repository)
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Print environment variables
        run: |
          echo "Condition 1: ${{ (github.event_name == 'pull_request_target' && contains(github.event.pull_request.labels.*.name, 'safe')) }}"
          echo "Condition 2: ${{ (github.event_name == 'push' && github.event.repository.full_name == github.repository) }}"
          echo "Event name: ${{ github.event_name }}"
          echo "Labels: ${{ github.event.pull_request.labels }}"
          echo "Safe label present: ${{ contains(github.event.pull_request.labels.*.name, 'safe') }}"
          echo "Push repository name: ${{ github.event.repository.full_name }}"
          echo "Repository: ${{ github.repository }}"
          cat $GITHUB_EVENT_PATH

      - name: Install uv
        uses: astral-sh/setup-uv@v5
        with:
          enable-cache: true
      - name: Set up Python ${{ env.PYTHON_VERSION }}
        run: uv python install ${{ env.PYTHON_VERSION }}
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: "18"
      - name: Build Assets
        run: npm ci && npm run prod
      - name: Fetch Documentation
        run: |
          uv sync
          uv run bin/website.py build
      - name: Start Deployment
        uses: bobheadxi/deployments@v1
        id: deployment
        with:
          step: start
          token: ${{ secrets.GITHUB_TOKEN }}
          env: Preview
      - name: Install Hugo
        uses: peaceiris/actions-hugo@v2
        with:
          hugo-version: "0.145.0"
          extended: true
      - name: Build
        run: hugo build --buildDrafts --buildFuture
      - name: Deploy
        uses: amondnet/vercel-action@v25
        id: vercel-action
        with:
          vercel-token: ${{ secrets.VERCEL_TOKEN }}
          github-token: ${{ secrets.GITHUB_TOKEN }}
          vercel-org-id: ${{ secrets.VERCEL_ORG_ID }}
          vercel-project-id: ${{ secrets.VERCEL_PROJECT_ID }}
          github-comment: true
          working-directory: public
      - name: Update Deployment Status
        uses: bobheadxi/deployments@v1
        if: always()
        with:
          step: finish
          token: ${{ secrets.GITHUB_TOKEN }}
          status: ${{ job.status }}
          deployment_id: ${{ steps.deployment.outputs.deployment_id }}
          env_url: ${{ steps.vercel-action.outputs.preview-url }}
          env: ${{ steps.deployment.outputs.env }}
